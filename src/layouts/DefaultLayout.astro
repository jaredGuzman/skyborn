---
import '@astrojs/tailwind/base.css'
import '../assets/scss/globals.scss'
import SiteMeta from '../components/SiteMeta.astro'
import Header from '../components/Header.astro'
import Footer from '../components/Footer.astro'

const {
  title = 'Skyborn Studios',
  description = 'The main website for the Skyborn Gamedev Studios',
  url,
  image = '/social-preview-image.png',
  author = 'Jared Guzman',
} = Astro.props
---

<html lang="en" dir="ltr" data-page={title.toLowerCase()}>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />

    <!-- favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

    <SiteMeta
      title={title}
      description={description.substring(0, 100)}
      url={Astro.site
        ? `${Astro.site}/${title.toLowerCase().replaceAll(' ', '-')}`
        : `https://accessible-astro.dev/${title.toLowerCase().replaceAll(' ', '-')}`}
      image={image}
      author={author}
    />
  </head>
  <body class="h-fit">
    <Header role="banner" />
    <main 
      id="main-content" 
      class="w-full relative z-1" 
      transition:animate="slide"
      tabindex="-1"
      style="outline: none; view-transition-name: main;"
      role="main"
    >
      <slot />
    </main>
    <Footer role="contentinfo" />

    <div
      id="announcer-defaultLayout"
      class="sr-only"
      aria-live="polite"
      aria-atomic="true"
      role="status"
    ></div>

    <style lang="scss" is:global>
      // theme settings
      :root {
        --radius-small: 3px;
        --radius-large: 6px;
        --gap-default: 2rem;
        --font-measure: 70ch;
        --font-family-default: 'Lato', sans-serif;
        --font-family-special: 'Literata', serif;
        // light theme
        --font-color: var(--neutral-900);
        --action-color: var(--primary-300);
        --action-color-state: var(--primary-500);
        --text-color: var(--primary-300);
        --background: var(--neutral-100);
        --primary-background: var(--primary-100);
        --neutral-background: var(--neutral-200);
        --transition-timing: cubic-bezier(0.4, 0, 0.2, 1);
        --transition-duration: 0.3s;
      }

      // dark color scheme overrides
      .darkmode {
        --font-color: var(--neutral-100);
        --action-color: var(--secondary-100);
        --action-color-state: var(--secondary-500);
        --text-color: var(--neutral-100);
        --background: var(--dark-100);
        --primary-background: var(--primary-500);
        --neutral-background: var(--neutral-900);
      }

      // sticky footer on low content pages
      html,
      body {
        height: 100%;
      }

      body {
        display: flex;
        flex-direction: column;
        align-items: start;
        color: var(--font-color);
        background-color: var(--background);
        overflow-x: hidden;

        main {
          flex: 1 0 auto;
        }

        [data-page='home'] & {
          main {
            flex: 1 0 auto;
            padding-top: 0rem;
          }
        }

        [data-page]:not([data-page='home']) & {
          main {
            flex: 1 0 auto;
            padding-top: 4rem;
          }
        }

        footer {
          flex-shrink: 0;
        }

        transition: background-color var(--transition-duration) var(--transition-timing);
        *:not(button) {
          transition: background-color var(--transition-duration) var(--transition-timing);
        }

        pre {
          transition:
            border-color var(--transition-duration) var(--transition-timing),
            background-color var(--transition-duration) var(--transition-timing);
        }

        will-change: background-color, color;
      }

      pre {
        padding: 1rem;
        border-radius: 0.35rem;
        border: 2px solid var(--action-color);
      }

      pre,
      .darkmode {
        will-change: transform;
      }

      body .pagination a {
        &:hover,
        &:focus-visible {
          background-color: var(--action-color-state);

          svg path {
            stroke: white;
          }
        }
      }

      .sr-only {
        position: absolute;
        width: 1px;
        height: 1px;
        padding: 0;
        margin: -1px;
        overflow: hidden;
        clip: rect(0, 0, 0, 0);
        white-space: nowrap;
        border-width: 0;
      }

      :focus-visible {
        outline: 2px solid var(--action-color);
        outline-offset: 2px;
      }

      // Improve skip link visibility
      .sr-only:focus-visible {
        outline: 2px solid var(--action-color);
        border-radius: var(--radius-small);
      }

      @media (prefers-reduced-motion: reduce) {
        * {
          animation-duration: 0.01ms !important;
          animation-iteration-count: 1 !important;
          transition-duration: 0.01ms !important;
          scroll-behavior: auto !important;
        }
      }

      @keyframes fade-out {
        0% { opacity: 1; }
        100% { opacity: 0; }
      }

      @keyframes fade-in {
        0% { opacity: 0; }
        100% { opacity: 1; }
      }

      ::view-transition-old(main) {
        animation: fade-out 0.2s ease-out both;
        z-index: 10;
      }

      ::view-transition-new(main) {
        animation: fade-in 0.3s ease-in both;
        animation-delay: 0.2s;
      }

      ::view-transition-old(nav) {
        animation: none;
      }

      ::view-transition-new(nav) {
        animation: none;
      }
    </style>
  </body>
</html>
