---
import BlogLayout from '../../layouts/BlogLayout.astro'
import { Card, Pagination } from 'accessible-astro-components'

export async function getStaticPaths({ paginate }) {
  // Import all blog posts from the content collection
  const posts = await Astro.glob('../../content/blog/*.md');
  
  // Sort posts by date if you have a date field in your frontmatter
  const sortedPosts = posts.sort((a: any, b: any) => {
    return new Date(b.frontmatter.date).getTime() - new Date(a.frontmatter.date).getTime();
  });

  // Transform the posts to match your blog structure
  const transformedPosts = sortedPosts.map((post: any) => ({
    ...post.frontmatter,
    content: post.compiledContent(),
    url: post.url,
    slug: post.file.split('/').pop().replace('.md', '')
  }));

  return paginate(transformedPosts, { pageSize: 6 });
}

const { page } = Astro.props
---

<BlogLayout
  title="Blog"
  description="An example of a blog with dynamic content fetched from JSONPlaceholder using the title, body and userId."
  isPost={false}
  date={null}
  image={null}
>
  <section class="my-12">
    <div class="space-content container">
      <h1>Blog</h1>
      <p class="text-2xl">
        An example of a blog with dynamic content fetched from <a href="https://jsonplaceholder.typicode.com/posts"
          >JSONPlaceholder</a
        > using the title, body and userId. The Accessible Astro Card Component is used here to display al the posts.
      </p>
    </div>
  </section>
  <section class="my-12">
    <div class="container">
      <p class="text-sm"><em>Post {page.start + 1} through {page.end + 1} of {page.total} total posts</em></p>
      <ul class="my-3">
        {
          page.data.map((post) => (
            <li>
              <Card
                url={post.url}
                title={post.title}
                img={post.thumbnail}
                footer={post.date}
              >
                {post.body}
              </Card>
            </li>
          ))
        }
      </ul>
      <div class="mt-12 grid place-content-center">
        <Pagination
          firstPage={page.url.prev ? '/blog' : null}
          previousPage={page.url.prev ? page.url.prev : null}
          nextPage={page.url.next ? page.url.next : null}
          lastPage={page.url.next ? `/blog/${Math.round(page.total / page.size)}` : null}
          currentPage={page.currentPage}
          totalPages={Math.round(page.total / page.size)}
        />
      </div>
    </div>
  </section>
</BlogLayout>

<style lang="scss">
  ul {
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: 4rem;

    @media (min-width: 550px) {
      grid-template-columns: repeat(2, 1fr);
      grid-gap: 2rem;
    }

    @media (min-width: 950px) {
      grid-template-columns: repeat(3, 1fr);
    }
  }
</style>
